sudo: required
dist: trusty
os: linux
language: minimal

cache:
  apt: true
  ccache: true
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
stages:
  - lint
  - test

env:
  global:
    - MAKEJOBS=-j5
    - RUN_TESTS=false
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=400M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
  matrix:
# ARM
    - HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Win32
    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.6 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports"
# Linux 32-bit
    - HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python3-zmq" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" PYZMQ=true
# Win64
    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.6 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4" WINE=true
# Linux 64-bit
    - HOST=x86_64-unknown-linux-gnu PACKAGES="bc python3-zmq" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_DASH_DEBUG" PYZMQ=true
# Cross-Mac
    - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" OSX_SDK=10.11 GOAL="deploy"

before_install:
    - travis_retry sudo apt-get install python-dev
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")

install:
    - if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi

before_script:
    - unset CC; unset CXX
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.xz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS

script:
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --disable-tests --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir PACKAGE=deviant VERSION=$HOST
    - cd deviant-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
    - if [ "$RUN_TESTS" = "true" -a "$WINE" != "true" ]; then make $MAKEJOBS check VERBOSE=1; fi
    - if [ "$RUN_TESTS" = "true" -a "$WINE" = "true" ]; then wine src/test/test_deviant.exe; fi
    - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi

after_script:
    - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then (echo "Upload goes here. Something like: scp -r $BASE_OUTDIR server" || echo "upload failed"); fi
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG

jobs:
  include:
    - stage: lint
      sudo: false
      cache: false
      addons:
        apt:
          packages:
            - python3-pip
            - shellcheck
      install:
        - travis_retry pip3 install flake8 --user
      before_script:
        - git fetch --unshallow
      script:
        - contrib/devtools/git-subtree-check.sh src/univalue
        - contrib/devtools/git-subtree-check.sh src/secp256k1
        # Remove the comment from the following line, when subtree for leveldb will be implemented. Keep in mind after the subtree fetch, it is needed to fix the files Makefile.am
        #- contrib/devtools/git-subtree-check.sh src/leveldb
        - contrib/devtools/check-doc.py
        - contrib/devtools/logprint-scanner.py
        - if [ "$TRAVIS_EVENT_TYPE" = "pull_request" ]; then contrib/devtools/lint-whitespace.sh; fi

deploy:
  provider: releases
  api_key:
  secure: "v30cMdFtQuyw5NKzKGkDX5NkfMA5cTc2OFmOJfICKbzjXcECC6l4mx+rUFPL9wHJWPZU6/AGlV72R4eakGtMqmPsyWifynN096FhuZ9fb/BouZ20RcicJ86gPyeF709A3t/ppjItMYu9YLnx9UdXDV5Ec4JE34LmV/X7HrNhpcFMWw78QCZpi30O8+Tv6tnJsOPzRCDaZv+C8+1jG5OHp2UGw3nNY24974sEALo7Lf6Lbfx8z4MN+lZv+6GQWmHz04I5CGM/z/72LAJPUFadCPF3DVIZC4sXaEIn5a1Zh3+i9srGv/wVtctQhT2tElZ14GjZ9/pol5XSgwI7Y0YC8GkAHNcWjrQLmuLDMBAr6GyJy4FkzLin0H6LnTNyXPXkkUYYeNhq8o9tQaXGQthtkI/IokrKrTg+lhXF9oH0kJ9sN7MxTFGVCYxZOqrOr5YLz3csGWsFBMclP4SLECABDlzs06sKahFul40VpCo7IyL3naiDFxz5/sJx3JSNucmyVIF1g8Je8lW91Ay/YuJfq/GRA+nTeoHEg9e+fUm0tZZrF41R/nAgSWq6LdKTmcTEv3lyFHNx3XdHorKDj2wOWTDt3nQIlr9Bxm/VxQP7NZ308J4tcGeIkVnlkbAyHv/Jg3flPBS18Kfv5+aFlgixgg4cvz6e9hdjDdMw1TqGApc="
  skip_cleanup: true
  file_glob: true
  file:
     - $HOST.tar.gz
  on:
    repo: ScaMar/Source
    branch: travis-corrections
